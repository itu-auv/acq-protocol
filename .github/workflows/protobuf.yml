name: Protobuf Compile

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Protobuf & NanoPB
      run: |
        sudo apt-get -y install protobuf-compiler protobuf-c-compiler
        sudo apt-get -y install python3-pip
        pip3 install nanopb        
        wget https://github.com/pseudomuto/protoc-gen-doc/releases/download/v1.5.0/protoc-gen-doc-1.5.0.linux-amd64.go1.16.6.tar.gz
        tar -xvf protoc-gen-doc-1.5.0.linux-amd64.go1.16.6.tar.gz
        sudo cp protoc-gen-doc-1.5.0.linux-amd64.go1.16.6/protoc-gen-doc /usr/bin/
        rm -rf protoc-gen-doc-1.5.0.linux-amd64.go1.16.6*
    - name: Generate
      run: |
        mkdir python
        mkdir c
        mkdir cpp
        mkdir nanopb
        mkdir docs
        ./generate.sh
    - name: Process Artifacts
      run: |
        ./configure.sh
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: sources.zip
        asset_name: sources.zip
        asset_content_type: application/zip
